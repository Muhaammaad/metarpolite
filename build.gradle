// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    repositories {
        google()
        jcenter()

    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.4.2'
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        maven { url "https://jitpack.io" }
    }
}

ext {
    //region Android
    mApplicationId = "com.muhaammaad.metarpolite"
    mMinSDKVersion = 15
    mCompileSdkVersion = 29
    mTargetSDKVersion = 29
    mVersionCode = 1
    mVersionName = "1.0"
    mMinifyEnable = true
    mDataBinding = true
    mReturnDefaultValues = true
    mSourceCompatibility = JavaVersion.VERSION_1_8
    mTargetCompatibility = JavaVersion.VERSION_1_8
    AndroidJUnitRunner = "androidx.test.runner.AndroidJUnitRunner"
    //endregion
    //region Libraries Versions
    appcompatVersion = "1.1.0"
    coreVersion = "1.2.0"
    constraintlayoutVersion = "1.1.3"
    lifecycleVersion = "2.2.0"
    recyclerviewVersion = "1.1.0"
    cardviewVersion = "1.0.0"
    lifecycle_compilerVersion = "1.1.1"
    roomVersion = "2.2.4"
    workVersion = "2.3.4"
    espressoVersion = "3.2.0"
    retrofit2Version = "2.5.0"
    robolectricVersion = "4.3.1"
    okhttp3Version = "3.9.0"
    rxAndroidVersion = "2.0.1"
    rxJavaVersion = "2.1.0"
    javaxVersion = "1.3.2"
    gsonVersion = "2.8.6"
    junitVersion = "4.12"
    testExtJunitVersion = "1.1.2-alpha05"
    coreTestingVersion = "2.1.0"
    runnerVersion = "1.2.0"
    daggerVersion = '2.16'
    //endregion Libraries Versions
    //region Libraries list

    androidx = [
            appcompat         : "androidx.appcompat:appcompat:$appcompatVersion",
            core              : "androidx.core:core-ktx:$coreVersion",
            constraintlayout  : "androidx.constraintlayout:constraintlayout:$constraintlayoutVersion",
            lifecycle         : "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion",
            recyclerview      : "androidx.recyclerview:recyclerview:$recyclerviewVersion",
            cardview          : "androidx.cardview:cardview:$cardviewVersion",
            work_runtime      : "androidx.work:work-runtime:$workVersion",
            work_testing      : "androidx.work:work-testing:$workVersion",
            lifecycle_compiler: "android.arch.lifecycle:compiler:$lifecycle_compilerVersion"
    ]

    androidx_test = [
            junit           : "junit:junit:$junitVersion",
            junit_ext       : "androidx.test.ext:junit:$testExtJunitVersion",
            core            : "androidx.arch.core:core-testing:$coreTestingVersion",
            runner          : "androidx.test:runner:$runnerVersion",
            espresso_core   : "androidx.test.espresso:espresso-core:$espressoVersion",
            espresso_idling : "androidx.test.espresso:espresso-idling-resource:$espressoVersion",
            espresso_contrib: "androidx.test.espresso:espresso-contrib:$espressoVersion"

    ]

    robolectric = [
            robolectric: "org.robolectric:robolectric:$robolectricVersion",
            annotations: "org.robolectric:annotations:$robolectricVersion"
    ]

    androidx_room = [
            runtime : "androidx.room:room-runtime:$roomVersion",
            rxjava  : "androidx.room:room-rxjava2:$roomVersion",
            compiler: "androidx.room:room-compiler:$roomVersion"
    ]

    reactivex = [
            rxandroid: "io.reactivex.rxjava2:rxandroid:$rxAndroidVersion",
            rxjava   : "io.reactivex.rxjava2:rxjava:$rxJavaVersion"
    ]

    retrofit2 = [
            adapter       : "com.squareup.retrofit2:adapter-rxjava2:$retrofit2Version",
            converter_gson: "com.squareup.retrofit2:converter-gson:$retrofit2Version",
            converter_xml : "com.squareup.retrofit2:converter-simplexml:$retrofit2Version"
    ]

    okhttp3 = [
            logging_intercepter: "com.squareup.okhttp3:logging-interceptor:$okhttp3Version"
    ]

    javax = [
            annotation: "javax.annotation:javax.annotation-api:$javaxVersion"
    ]

    google = [
            gson            : "com.google.code.gson:gson:$gsonVersion",
            dagger          : "com.google.dagger:dagger:$daggerVersion",
            dagger_compiler : "com.google.dagger:dagger-compiler:$daggerVersion",
            dagger_support  : "com.google.dagger:dagger-android-support:$daggerVersion",
            dagger_processor: "com.google.dagger:dagger-android-processor:$daggerVersion"

    ]
    //endregion Libraries list
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
